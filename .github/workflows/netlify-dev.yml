name: Development workflow

on:
    push:
        branches-ignore:
            - "preprod"
            - "main"

jobs:
    prettier:
        runs-on: ubuntu-latest
        steps:
            - name: Prettier
              uses: actions/checkout@v4
            - name: Prettier check
              run:
                  npx prettier --write pages/ && npx prettier
                  'pages/**/*.{js,jsx,ts,tsx,html}' --check

    cypress-run:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            # Install NPM dependencies, cache them correctly
            # and run all Cypress tests
            - name: run cypress tests with chrome
              uses: cypress-io/github-action@v6
              timeout-minutes: 10
              with:
                  browser: chrome
                  config: baseUrl=http://localhost:3000
                  build: yarn run build
                  start: yarn run dev
            - uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: cypress-screenshots
                  path: ./cypress/screenshots
            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: cypress-videos
                  path: ./cypress/videos

    lhci:
        if: github.ref == 'refs/heads/dev'
        name: Lighthouse CI
        runs-on: ubuntu-latest
        environment: dev
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 20
            - name: Use Node.js 18
              uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Setup Chrome
              uses: browser-actions/setup-chrome@v2
              id: setup-chrome
              with:
                  chrome-version: stable
                  install-dependencies: true
            - name: Verify Chrome Installation
              run: |
                  echo "Chrome path: ${{ steps.setup-chrome.outputs.chrome-path }}"
                  echo "Chrome version:"
                  ${{ steps.setup-chrome.outputs.chrome-path }} --version
                  echo "Testing Chrome flags:"
                  ${{ steps.setup-chrome.outputs.chrome-path }} --headless --disable-gpu --no-sandbox --version
                  echo "System info:"
                  uname -a
                  cat /etc/os-release
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v2.0
              with:
                  file_name: .env
                  fail_on_empty: true
                  envkey_NETWORK: ${{ secrets.NETWORK }}
                  envkey_RPC_URL: ${{ secrets.RPC_URL }}
                  envkey_WOLF_NFT: ${{ secrets.WOLF_NFT }}
                  envkey_DEER_NFT: ${{ secrets.DEER_NFT }}
                  envkey_BULL_NFT: ${{ secrets.BULL_NFT }}
                  envkey_TEZOS_CONVERTER: ${{ secrets.TEZOS_CONVERTER }}
                  envkey_WILDIANS_PART: ${{ secrets.WILDIANS_PART }}
                  envkey_ASSOCIATION_PART: ${{ secrets.ASSOCIATION_PART }}
                  envkey_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  envkey_CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
                  envkey_GCPAPIKEY: ${{ secrets.GCPAPIKEY }}
                  envkey_GCPAPPID: ${{ secrets.GCPAPPID }}
                  envkey_GCPAUTHDOMAIN: ${{ secrets.GCPAUTHDOMAIN }}
                  envkey_GCPDATABASEURL: ${{ secrets.GCPDATABASEURL }}
                  envkey_GCPMESSAGINGSENDERID:
                      ${{ secrets.GCPMESSAGINGSENDERID }}
                  envkey_GCPPROJECTID: ${{ secrets.GCPPROJECTID }}
                  envkey_GCPSTORAGEBUCKET: ${{ secrets.GCPSTORAGEBUCKET }}
                  envkey_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
                  envkey_NAME: ${{ secrets.NAME }}
                  envkey_CLARITY_APPID: ${{secrets.CLARITY_APPID}}
            - name: Install dependencies
              run: |
                  npm install -g yarn
                  yarn install --frozen-lockfile
            - name: Build project
              run: yarn run build
            - name: run Lighthouse CI
              run: |
                  npm install -g @lhci/cli@0.15.x
                  lhci autorun
              env:
                  CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
                  PUPPETEER_EXECUTABLE_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}

    deploy-app:
        if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
        environment: dev
        runs-on: ubuntu-latest
        needs:
            - cypress-run
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v2.0
              with:
                  file_name: .env
                  fail_on_empty: true
                  envkey_NETWORK: ${{ secrets.NETWORK }}
                  envkey_RPC_URL: ${{ secrets.RPC_URL }}
                  envkey_WOLF_NFT: ${{ secrets.WOLF_NFT }}
                  envkey_DEER_NFT: ${{ secrets.DEER_NFT }}
                  envkey_BULL_NFT: ${{ secrets.BULL_NFT }}
                  envkey_TEZOS_CONVERTER: ${{ secrets.TEZOS_CONVERTER }}
                  envkey_WILDIANS_PART: ${{ secrets.WILDIANS_PART }}
                  envkey_ASSOCIATION_PART: ${{ secrets.ASSOCIATION_PART }}
                  envkey_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  envkey_CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
                  envkey_GCPAPIKEY: ${{ secrets.GCPAPIKEY }}
                  envkey_GCPAPPID: ${{ secrets.GCPAPPID }}
                  envkey_GCPAUTHDOMAIN: ${{ secrets.GCPAUTHDOMAIN }}
                  envkey_GCPDATABASEURL: ${{ secrets.GCPDATABASEURL }}
                  envkey_GCPMESSAGINGSENDERID:
                      ${{ secrets.GCPMESSAGINGSENDERID }}
                  envkey_GCPPROJECTID: ${{ secrets.GCPPROJECTID }}
                  envkey_GCPSTORAGEBUCKET: ${{ secrets.GCPSTORAGEBUCKET }}
                  envkey_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
                  envkey_NAME: ${{ secrets.NAME }}
                  envkey_CLARITY_APPID: ${{secrets.CLARITY_APPID}}
            - run: npm install -g yarn
            - run: yarn install --frozen-lockfile
            - run: yarn build

            - name: Netlify deploy
              uses: South-Paw/action-netlify-cli@v2
              id: netlify
              with:
                  args:
                      'deploy --prod --dir ./out --message "Deploy from GitHub
                      Actions [${{ github.sha }}]"'
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
