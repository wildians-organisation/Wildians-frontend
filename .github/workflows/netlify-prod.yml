name: Prod workflow

on:
    push:
        branches: [main]

jobs:
    prettier:
        runs-on: ubuntu-latest
        steps:
            - name: Prettier
              uses: actions/checkout@v4
            - name: Prettier check
              run:
                  npx prettier --write pages/ && npx prettier
                  'pages/**/*.{js,jsx,ts,tsx,html}' --check

    deploy-app:
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        environment: prod
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v2.0
              with:
                  file_name: .env
                  fail_on_empty: true
                  envkey_NETWORK: ${{ secrets.NETWORK }}
                  envkey_RPC_URL: ${{ secrets.RPC_URL }}
                  envkey_WOLF_NFT: ${{ secrets.WOLF_NFT }}
                  envkey_DEER_NFT: ${{ secrets.DEER_NFT }}
                  envkey_BULL_NFT: ${{ secrets.BULL_NFT }}
                  envkey_TEZOS_CONVERTER: ${{ secrets.TEZOS_CONVERTER }}
                  envkey_WILDIANS_PART: ${{ secrets.WILDIANS_PART }}
                  envkey_ASSOCIATION_PART: ${{ secrets.ASSOCIATION_PART }}
                  envkey_CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
                  envkey_GCPAPIKEY: ${{ secrets.GCPAPIKEY }}
                  envkey_GCPAPPID: ${{ secrets.GCPAPPID }}
                  envkey_GCPAUTHDOMAIN: ${{ secrets.GCPAUTHDOMAIN }}
                  envkey_GCPDATABASEURL: ${{ secrets.GCPDATABASEURL }}
                  envkey_GCPMESSAGINGSENDERID:
                      ${{ secrets.GCPMESSAGINGSENDERID }}
                  envkey_GCPPROJECTID: ${{ secrets.GCPPROJECTID }}
                  envkey_GCPSTORAGEBUCKET: ${{ secrets.GCPSTORAGEBUCKET }}
                  envkey_BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
                  envkey_NAME: ${{ secrets.NAME }}
                  envkey_CLARITY_APPID: ${{secrets.CLARITY_APPID}}
            - run: npm install -g yarn
            - run: yarn install --frozen-lockfile
            - run: yarn build

            - name: Netlify deploy
              uses: South-Paw/action-netlify-cli@v2
              id: netlify
              with:
                  args: 'deploy --prod --dir ./out --message "Deploy from GitHub Actions [${{ github.sha }}]"'
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
